/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var React = __webpack_require__(1);
	var ReactDOM = __webpack_require__(2);
	var app_1 = __webpack_require__(3);
	ReactDOM.render(React.createElement(app_1.App, null), document.getElementById('root'));


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = ReactDOM;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var overlayContainer_1 = __webpack_require__(4);
	var overlay_1 = __webpack_require__(5);
	var App = (function (_super) {
	    __extends(App, _super);
	    function App(props) {
	        var _this = _super.call(this, props) || this;
	        _this.state = {
	            visible: false,
	            alignment: {
	                target: {
	                    horizontal: 1 /* Left */,
	                    vertical: 3 /* Bottom */
	                },
	                overlay: {
	                    horizontal: 1 /* Left */,
	                    vertical: 1 /* Top */
	                }
	            }
	        };
	        return _this;
	    }
	    App.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(overlayContainer_1.OverlayContainer, null,
	            React.createElement("div", { style: ({ width: "100px" }), onClick: function () { return _this.setState({ visible: true }); } }, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. At ea expedita modi quis, ullam voluptatem?" + " " + "Ab alias aperiam dolor doloribus, explicabo fugit, ipsa ipsum laboriosam laudantium, minima optio quod sint?"),
	            React.createElement(overlay_1.Overlay, { visible: this.state.visible, onClickOutside: function (clickedOnContainer) { return _this.setState({ visible: clickedOnContainer }); }, alignment: this.state.alignment }, function (left, top) {
	                return React.createElement("div", { style: ({ position: 'absolute', top: top, left: left }) }, "Lorem ipsum dolor sit.");
	            })));
	    };
	    return App;
	}(React.Component));
	exports.App = App;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __assign = (this && this.__assign) || Object.assign || function(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	            t[p] = s[p];
	    }
	    return t;
	};
	var React = __webpack_require__(1);
	var OverlayContainer = (function (_super) {
	    __extends(OverlayContainer, _super);
	    function OverlayContainer() {
	        return _super.apply(this, arguments) || this;
	    }
	    OverlayContainer.prototype.getChildContext = function () {
	        return {
	            target: this.refs["target"]
	        };
	    };
	    OverlayContainer.prototype.render = function () {
	        return (React.createElement("div", __assign({ ref: "target" }, this.props), this.props.children));
	    };
	    return OverlayContainer;
	}(React.Component));
	OverlayContainer.childContextTypes = {
	    target: React.PropTypes.any
	};
	exports.OverlayContainer = OverlayContainer;


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var ReactDom = __webpack_require__(2);
	var elementPosition_1 = __webpack_require__(6);
	var Overlay = (function (_super) {
	    __extends(Overlay, _super);
	    function Overlay(props) {
	        var _this = _super.call(this, props) || this;
	        /**
	         * Rerender popup to get new top and left
	         */
	        _this.resizeHandler = function () { return _this.renderPopup(); };
	        /**
	         * Close popup on click outside of popup and container
	         */
	        _this.closeOnClickHandler = function (e) {
	            if (e.target && (e.target["nodeType"]) === 1) {
	                var targetElement = e.target;
	                if (!_this.isDOMParent(targetElement, _this.host)) {
	                    if (_this.isDOMParent(targetElement, _this.target)) {
	                        if (_this.props.onClickOutside) {
	                            _this.props.onClickOutside(true);
	                        }
	                    }
	                    if (_this.props.onClickOutside) {
	                        _this.props.onClickOutside(false);
	                    }
	                    window.removeEventListener("mousedown", _this.closeOnClickHandler);
	                }
	            }
	        };
	        _this.state = {
	            top: 0,
	            left: 0
	        };
	        return _this;
	    }
	    Overlay.prototype.componentDidMount = function () {
	        this.renderPopup();
	    };
	    Overlay.prototype.componentDidUpdate = function () {
	        this.renderPopup();
	    };
	    Overlay.prototype.componentWillUnmount = function () {
	        this.removePopup();
	    };
	    Overlay.prototype.render = function () {
	        return null;
	    };
	    /**
	     * Gets the value indicating whether parent is direct or indirect parent node of the specified element.
	     */
	    Overlay.prototype.isDOMParent = function (element, parent) {
	        if (!element || !parent) {
	            return false;
	        }
	        if (element === parent) {
	            return true;
	        }
	        if (!element.parentElement) {
	            return false;
	        }
	        return this.isDOMParent(element.parentElement, parent);
	    };
	    Overlay.prototype.renderPopup = function () {
	        var _this = this;
	        var renderChildren = function (left, top) { return _this.props.children(left, top); };
	        if (this.props.visible !== false) {
	            if (!this.wrapper) {
	                this.wrapper = document.createElement("div");
	                document.body.appendChild(this.wrapper);
	                window.addEventListener("resize", this.resizeHandler);
	                if (this.props.onClickOutside) {
	                    window.addEventListener("mousedown", this.closeOnClickHandler);
	                }
	            }
	            ReactDom.render(renderChildren(this.state.left, this.state.top), this.wrapper);
	            this.host = this.wrapper.children[0];
	            // context.target is set by OverlayContainer
	            this.target = ReactDom.findDOMNode(this.context.target);
	            var _a = elementPosition_1.alignContainer(this.host, this.target, this.props.alignment), top_1 = _a.top, left = _a.left;
	            if (this.state.top !== top_1 || this.state.left !== left) {
	                this.setState({ top: top_1, left: left });
	            }
	        }
	        else if (this.props.visible === false && this.wrapper) {
	            this.removePopup();
	        }
	    };
	    Overlay.prototype.removePopup = function () {
	        window.removeEventListener("resize", this.resizeHandler);
	        window.removeEventListener("mousedown", this.closeOnClickHandler);
	        if (this.wrapper) {
	            document.body.removeChild(this.wrapper);
	            ReactDom.unmountComponentAtNode(this.wrapper);
	            this.wrapper = null;
	        }
	    };
	    return Overlay;
	}(React.Component));
	Overlay.contextTypes = {
	    target: React.PropTypes.any
	};
	exports.Overlay = Overlay;


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var positioning_1 = __webpack_require__(7);
	var defaultAlignment = {
	    target: {
	        horizontal: 1 /* Left */,
	        vertical: 3 /* Bottom */
	    },
	    overlay: {
	        horizontal: 1 /* Left */,
	        vertical: 1 /* Top */
	    }
	};
	function alignContainer(element, target, alignment) {
	    if (alignment === void 0) { alignment = defaultAlignment; }
	    var elementRect = rectFromElement(element);
	    var targetRect = target ? rectFromElement(target) : rectFromWindow();
	    if (!elementRect || !targetRect) {
	        return { top: 0, left: 0 };
	    }
	    var newElementRect = positioning_1.position(elementRect, targetRect, alignment);
	    var offsetLeft = element.offsetLeft + newElementRect.left - elementRect.left;
	    var offsetTop = element.offsetTop + newElementRect.top - elementRect.top;
	    return { top: offsetTop, left: offsetLeft };
	}
	exports.alignContainer = alignContainer;
	function rectFromElement(element) {
	    if (!element) {
	        throw new Error("Element is undefined.");
	    }
	    var position = {
	        left: 0,
	        top: 0
	    };
	    var current = element;
	    do {
	        position.left += current.offsetLeft;
	        position.top += current.offsetTop;
	        current = current.offsetParent;
	    } while (current);
	    return {
	        left: position.left,
	        top: position.top,
	        width: element.offsetWidth,
	        height: element.offsetHeight
	    };
	}
	function rectFromWindow() {
	    return {
	        left: window.scrollX,
	        top: window.scrollY,
	        width: window.innerWidth,
	        height: window.innerHeight
	    };
	}


/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";
	var defaultAlign = {
	    target: {
	        horizontal: 1 /* Left */,
	        vertical: 3 /* Bottom */
	    },
	    overlay: {
	        horizontal: 1 /* Left */,
	        vertical: 1 /* Top */
	    }
	};
	function segmentPositioningPoint(start, length, align) {
	    switch (align) {
	        case 1 /* Left */:
	            return start;
	        case 2 /* Center */:
	            return start + (length / 2);
	        case 3 /* Right */:
	            return start + length;
	        default:
	            throw new Error("Unknown align option.");
	    }
	}
	function elementPositioningPoint(element, align) {
	    return {
	        left: segmentPositioningPoint(element.left, element.width, align.horizontal),
	        top: segmentPositioningPoint(element.top, element.height, align.vertical)
	    };
	}
	/** Align @{element} with specified @{target} by calculating new @{element} position rectangle. */
	function positionElement(element, target, alignment) {
	    var elementPoint = elementPositioningPoint(element, alignment.overlay);
	    var targetPoint = elementPositioningPoint(target, alignment.target);
	    var offset = {
	        left: targetPoint.left - elementPoint.left,
	        top: targetPoint.top - elementPoint.top
	    };
	    return {
	        left: element.left + offset.left,
	        top: element.top + offset.top,
	        width: element.width,
	        height: element.height
	    };
	}
	function position(element, target) {
	    var positions = [];
	    for (var _i = 2; _i < arguments.length; _i++) {
	        positions[_i - 2] = arguments[_i];
	    }
	    positions = positions || [defaultAlign];
	    return positionElement(element, target, positions[0]);
	}
	exports.position = position;


/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map